#!/usr/bin/env ruby

require 'fileutils'
require_relative '../lib/go_watchdog.rb'
require 'highline/import'

base_dir = File.expand_path(File.join(__dir__, '..'))
template = File.join(base_dir, 'config.yml.example')
config_file = File.join(ENV['HOME'], '.go_watchdog.yml')

if File.exists?(config_file)
  puts "[GoWatchdog] Using config from #{config_file}"
else
  FileUtils.cp template, config_file
  puts "[GoWatchdog] Created config file at #{config_file}. Please customize and then re-run."
  exit -1
end

config = YAML.load(File.read(config_file))
username = config['credentials']['username']
host = config['pipeline']['host']
config['credentials']['password'] ||= ask("enter password for #{username}@#{host}: ") { |prompt| prompt.echo = false }

WATCHDOG_CONFIG = config

GoWatchdogApp.run!
